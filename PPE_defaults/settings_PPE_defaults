#!/bin/bash

# Prepared with jobscript toolkit version: 1.00 (October 2013)

#-------------------------------------------------------------------------------------------------------
#
# Sylvaine Ferrachat / Grazia Frontoso 2012
#
#
# Set the variables for running echam 
# This file is sourced in jobsubm_echam.sh
#
# The task of creating the symlinks to input files is done elsewhere (see jobsubm_echam.sh),
# to avoid cluttering this settings file
#
# This file comprises 4 main chapters, where you should adjust your settings:
#   - General settings
#   - Compute settings
#   - ECHAM(-HAMMOZ) settings
#   - Settings for launching a slave p-proc job at the end of each echam integration
#
#-------------------------------------------------------------------------------------------------------

set -e

#------------------------------------------------------------------------------------------------------
#-- General settings:

model_dir="/home/n02/n02/catm109/Models/ECHAM/echam6ham2/tuning"    # location of the sources and bin of the model
exp="PPE_defaults"        # experiment identifier
script_dir=${model_dir}/run/${exp}                # where the jobscript and exp namelist are to be found
echam_jobscript=${script_dir}/echam_jobscript_${exp}.sh # echam batch job script name

make_source_backup=true   # set to true if you want to keep records of the current state of your code
                          # it will create a text file named "source_info_[exp]_YYYY-MM-DD_HH.mm.txt"
                          # where you'll find all details (base version number, differences to base version
                          # and how to restore your code in future)
                          # !!WARNING!! it only works if your code is a working copy from an svn repository
                          #             In the opposite case, make_source_backup will be automatically reset
                          #             to false.

#------------------------------------------------------------------------------------------------------
#-- Compute settings for machine: archer (ARCHER (Cray XC30))

queue_name="short"                   # queue name to use on current batch system
jobname="${exp::15}"                    # batch job name
ncpus=48                               # total number of cpus
walltime="00:10:00"                     # job estimated runtime
nproma=40                               # vector length (don't modify if you don't know about it)
account="n02-NEL013746"                         # project ID for accounting 
email="schutgens@physics.ox.ac.uk"      # email address
exp_dir="/work/n02/n02/$USER/${exp}/"   # where the run will be done 

#-Body-begin. Do not delete this line!
#------------------------------------------------------------------------------------------------------
#-- ECHAM6-HAMMOZ settings:

   #-- General:

model_type="echam6-ham"                           # model type (echam5.5-ham, echam6, echam6-ham, etc...)
model_bin=${model_dir}/bin/echam6                 # model bin name
emissions_spec=${script_dir}/emi_spec_${exp}.txt  # name of your exp emi_spec file to copy to $exp_dir

hres="T31"                    # horizontal spectral truncation
vres="L19"                    # vertical resolution
oceres="GR30"                 # resolution of the ocean model used to produce the land-sea mask
ntiles=11                     # number of tiles in the vegetation model

no_cycles=1                   # number of cycles in one integration (1 cycle = timespan between 2 'putrerun' events)
init_restart_flag=.false.     # echam restart flag at launch of this job 
                              # (in case of job chaining, the proper rerun flag will be automatically 
                              #  set when further jobs will be started)

date_start="1999,10,01,0,0,0" # start of the experiment - Should never be modified when making a rerun
date_stop="1999,10,02,0,0,0"  # end of the experiment - Can be freely adjusted during the whole experiment

input_files_version="v01_001" # version label for input files !!do not change if you don't know about it!!
scenario="RCP45"              # in case it is relevant for the given setup (using either variable GHG's
                              # ozone or climatologic aerosols, AND the experiment's time range 
                              # overlaps with [2009,2100]), choose here the scenario you'd like
                              # (RCP45, XXX, all case insensitive)
aero_dataset="aerocom_II"    # emissions dataset (case sensitive)

   #-- ECHAM6-HAMMOZ namelists:

       #-- ECHAM:

cat > ${script_dir}/namelist_${exp}.echam << EOF
&PARCTL
 nproca = WILL BE AUTOMATICALLY SET HERE UNLESS YOU DEFINE A VALID VALUE HERE
 nprocb = WILL BE AUTOMATICALLY SET HERE UNLESS YOU DEFINE A VALID VALUE HERE
/
&RUNCTL 
 nproma         = ${nproma}
 lresume        = $init_restart_flag,
 lmidatm        = .false.
 out_datapath   = "$exp_dir"
 out_expname    = "$exp"
 out_filetype   = 2     ! 1--> grib; 2--> NetCDF; 6--> NetCDF4;
 trac_filetype  = 2     ! 1--> grib; 2--> NetCDF;
 rerun_filetype = 2     ! 2--> NetCDF; 4--> NetCDF2
 dt_start       = $date_start
 dt_stop        = $date_stop
 putdata        = 1,'months','last',0
! putdata        = 1,'days','last',0
 trigfiles      = 1, 'months', 'first', 0
 putrerun       = 1,'months','last',0
! putrerun       = 1,'days','last',0
 no_cycles      = ${no_cycles}, 
 lamip          = .false.
 lnudge         = .false.
 lipcc          = .false.
 ldebugs        = .false.
 ltimer         = .false.
/
&SUBMODELCTL
 lmethox          = .true.
 lham             = .true.
 lflighttrack     = .false.
 lbioemi_stdalone = .false.
 lmoz             = .false.
 lhammoz          = .false.
 emi_basepath     = "[WILL BE AUTOMATICALLY SET HERE UNLESS YOU DEFINE A VALID PATH HERE]"
/
&SUBMDIAGCTL
 vphysc_lpost     = .true.
 vphyscnam        = 'all'
 wetdep_lpost     = .true. 
 wetdepnam        = 'default' 
 wetdep_gastrac   = 'SO2', 'SO4_gas'
 wetdep_keytype   = 2          ! BYTRACER=1; BYSPECIES=2; BYMODE=3
 drydep_lpost     = .true. 
 drydepnam        = 'all' 
 drydep_gastrac   = 'SO2', 'SO4_gas'
 drydep_keytype   = 2          ! BYTRACER=1; BYSPECIES=2; BYMODE=3
 sedi_lpost       = .true. 
 sedinam          = 'all'
 sedi_keytype     = 2          ! BYTRACER=1; BYSPECIES=2; BYMODE=3 
 emi_lpost        = .true.
 emi_lpost_sector = .true.
 eminam           = 'all'
 emi_gastrac      = 'all'
/
&DEBUGSCTL
 putdebug_stream = 1, 'days', 'last', 0
/
&RADCTL
 iaero   = 1     ! 1 for interactive (lham=true), 2 for Tanre 3 for Kinne  
 l_srtm  = .true.
 l_lrtm  = .true.
 isolrad = 3      
 io3     = 4     ! 3 --> obsolete! climatology from IPCC-NetCDF file, 4--> CMIP5 new data
/
&PHYSCTL
 lcover         = .false.
 lcdnc_progn    = .true.
 ncd_activ      = 1
 nactivpdf      = 0
 nic_cirrus     = 2
 nccndiag       = 0
 nauto          = 2
! tune_cdnmin    =
! tune_wminact   =
 tune_ccraut    = CCRAUT ! CCRAUT
 tune_ccsaut    = CCSAUT ! CCSAUT
! tune_cmfctop   =
! tune_entrscv   =
! tune_entrpen   =
! tune_cprcon    =
 tune_inhomi    = inhomi ! inhomi
/
&HAM_DUSTCTL
 ndustE2 = 4
/
&HAMCTL
    lsoa          = .false.
 nseasalt       = 5
 nwetdep        = 3
 naerorad       = 1
 nrad           = 0, 3, 3, 3, 3, 3, 3
 nradmix        = 0, 1, 1, 1, 1, 1, 1  
 nraddiag       = 1
 burden_keytype = 2          ! BYTRACER=1; BYSPECIES=2;
/
&NDGCTL
 inudgformat     = 2
 dt_nudg_start   = $date_start
 dt_nudg_stop    = $date_stop
 lnudgdbx        = .false.
 lnudgini        = .true.
 nudglmin        = 1
 nudglmax        = ${vres#L}
 nudgsmin        = 0
 nudgsmax        = ${hres#T}
 lnudgimp        = .TRUE.
 nudgd           = ${vres#L}*0.579
 nudgt           = ${vres#L}*1.16
 nudgv           = ${vres#L}*4.63
 nudgp           = 1.16
 ltintlin        = .false.
 ldamplin        = .true.
 nudgdamp        = 1.
 nudgdsize       = 0.5
 ndg_file_nc    = "ndg%y4%m2.nc"
/
&FLIGHTTRACKCTL
  lseconds = .FALSE.
  track_max_points = 25000
  track_filename = 'flight.trk'
  output_filename = 'flight.out'
  tracer_names = 'NUM_KS', 'NUM_AS', 'NUM_CS', 'NUM_KI', 'BC_KS', 'BC_AS', 'BC_CS', 'BC_KI'
/
EOF

       #-- JS-BACH:

cat > ${script_dir}/namelist_${exp}.jsbach <<EOF
&JSBACH_CTL
  standalone = .false.
  ! --- number of tiles ---
  ntiles = ${ntiles}

  ! --- options to activate the different jsbach modules ---
  use_bethy = .true.
  use_phenology = .true.
  use_albedo = .true.
  use_dynveg = .false.

  ! --- output options ---
  file_type = "NETCDF"
  lpost_echam = .false.
  debug = .false.
/
&ALBEDO_CTL
  use_albedocanopy = .false.
/
&CBALANCE_CTL
  read_cpools = .false.
/
&DYNVEG_CTL
  read_fpc = .false.
  dynveg_feedback = .false.
/
&CLIMBUF_CTL
  init_running_means = .false.
/
EOF

       #-- Mean-values streams:

#SF uncomment the following if you need to compute online monthly means:

#cat >> ${script_dir}/namelist_${exp}.echam << EOF
#&MVSTREAMCTL
#  m_stream_name = 'ham', 'rad', 'tracer', 'vphysc', 'activ' 
#/
#EOF

cat > ${script_dir}/ham.nml <<EOF
&MVCTL
  PUTMEAN = 1,'months','last',0
  meannam = 'all'
/
EOF

cat > ${script_dir}/rad.nml <<EOF
&MVCTL
  PUTMEAN = 1,'months','last',0
  meannam = 'all'
/
EOF

cat > ${script_dir}/tracer.nml <<EOF
&MVCTL
  PUTMEAN = 1,'months','last',0
  meannam = 'all' 
/
EOF

cat > ${script_dir}/vphysc.nml <<EOF
&MVCTL
  PUTMEAN = 1,'months','last',0
  meannam = 'all'
/
EOF

cat > ${script_dir}/activ.nml <<EOF
&MVCTL
  PUTMEAN = 1,'months','last',0
  meannam = 'all'
/
EOF

#-Body-end. Do not delete this line!

#------------------------------------------------------------------------------------------------------
#-- Settings for launching a slave p-proc job at the end of each echam integration
#   This may be specific for machine: archer (ARCHER (Cray XC30))

flag_p_proc=false                                         # flag to launch the p-proc
p_proc_script="${root_path}/machine_configs/archer/post-monthly.sh"      # p-proc script (no batch directives in there)
p_proc_dir="${exp_dir/work/nerc}"                         # remote directory where p_proc is done
p_proc_jobname="post-${exp::10}"                          # batch jobname for executing the p_proc_script
p_proc_walltime="00:20:00"                                # requested walltime for the p_proc batch job
